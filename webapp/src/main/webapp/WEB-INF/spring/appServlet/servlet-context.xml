<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
		
	<context:annotation-config />
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
		<mvc:argument-resolvers>
			<bean class="org.crowdguru.webapp.security.CurrentUserHandlerMethodArgumentResolver"></bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    	<property name="favorPathExtension" value="false" />
    	<property name="favorParameter" value="true" />
    	<property name="mediaTypes" >
        	<value>
            	json=application/json
        	</value>
    	</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
	</bean>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/static/**" location="static/" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/logout"/>
			<mvc:exclude-mapping path="/sessions"/>
			<bean class="org.crowdguru.webapp.interceptor.NavBarInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<ref bean="emiv"/>
		</mvc:interceptor>
	</mvc:interceptors>

    <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="2000000"/>
    </bean>
	
	<bean id="templateResolver"
       class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
  		<property name="prefix" value="/WEB-INF/thymeleaf/" />
  		<property name="suffix" value=".html" />
  		<property name="templateMode" value="HTML5" />
	</bean>
    
	<bean id="templateEngine"
      class="org.thymeleaf.spring3.SpringTemplateEngine">
  		<property name="templateResolver" ref="templateResolver" />
  		<property name="additionalDialects">
        	<set>	
          		<bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
        	</set>
      	</property>
	</bean>
	
	<bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
  		<property name="templateEngine" ref="templateEngine" />
  		<property name="order" value="2" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	
	<context:component-scan
		base-package="org.crowdguru.webapp.controller,
			  org.crowdguru.webapp.configuration,
			  org.crowdguru.webapp.service,
			  org.crowdguru.webapp.service.stub" />
			  
	<beans profile="prod, dev, cloud">
		<bean id="emiv" class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
			<property name="persistenceUnitName" value="crowdguru" />
		</bean>
	</beans>
</beans>
